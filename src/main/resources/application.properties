# SPRING
spring.application.name=ddmdemo
server.port=${API_PORT:8080}
server.address=0.0.0.0

# DATA SOURCE
spring.datasource.url=jdbc:postgresql://localhost:5432/udd
spring.datasource.username=postgres
spring.datasource.password=super
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false

# ELASTICSEARCH
elasticsearch.host=${ES_HOST:localhost}
elasticsearch.port=${ES_PORT:9200}
elasticsearch.username=${ES_USERNAME:elastic}
elasticsearch.password=${ES_PASSWORD:sifraElastic123}
spring.elasticsearch.connection-timeout=5s
spring.elasticsearch.socket-timeout=30s

# DOCUMENT STORAGE - MINIO
spring.minio.url=http://${MINIO_HOST:localhost}:9000
spring.minio.bucket=${MINIO_BUCKET:security-incidents}
spring.minio.access-key=${MINIO_ACCESS_KEY:admin}
spring.minio.secret-key=${MINIO_SECRET_KEY:password123}

# LOGGING
# Log file configuration
logging.file.name=logstash-ingest-data/application.log
#logging.level.com.example=DEBUG #(optional)

server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

#Auth

app.security.expected-issuer=http://localhost:9099/realms/milica-realm
app.security.jwk-set-uri=http://localhost:9099/realms/milica-realm/protocol/openid-connect/certs

app.security.audience=backend
app.security.client-id=backend
spring.security.oauth2.resourceserver.jwt.issuer-uri=${app.security.expected-issuer}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${app.security.jwk-set-uri}

#spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:9099/realms/sep-realm/protocol/openid-connect/token